name: Release Build

on:
  push:
    tags:
      - 'v*.*.*'
      - '*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write  # Required for creating releases and uploading assets
  actions: write   # Required for uploading artifacts
  pages: write     # Required for GitHub Pages deployment
  id-token: write  # Required for GitHub Pages deployment

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Update app version (if triggered by tag or manual input)
      if: startsWith(github.ref, 'refs/tags/') || github.event.inputs.version != ''
      run: |
        # Extract version from tag (remove 'v' prefix)
        if [ "${{ github.event_name }}" = "push" ]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION=${{ github.event.inputs.version }}
          VERSION=${VERSION#v}
        fi
        
        echo "Setting version to: $VERSION"
        
        # Update package.json version
        npm version $VERSION --no-git-tag-version
        
        # Update Android version
        ANDROID_DIR="android/app"
        if [ -f "$ANDROID_DIR/build.gradle" ]; then
          # Calculate version code (assuming semantic versioning)
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)
          VERSION_CODE=$((MAJOR * 10000 + MINOR * 100 + PATCH))
          
          echo "Setting version code to: $VERSION_CODE"
          
          # Update build.gradle
          sed -i "s/versionCode [0-9]*/versionCode $VERSION_CODE/" $ANDROID_DIR/build.gradle
          sed -i "s/versionName \".*\"/versionName \"$VERSION\"/" $ANDROID_DIR/build.gradle
        fi
        
    - name: Build Android app with Docker
      run: |
        # Build the Docker image
        docker build -t vegetipple-android-builder .
        
        # Create output directory
        mkdir -p build-output
        
        # Run Docker container and build all artifacts
        docker run --rm \
          -v "$(pwd)/build-output:/output" \
          vegetipple-android-builder \
          bash -c "
            # Copy web build
            cp -r /app/www /output/ && \
            echo 'Web build copied successfully' && \
            
            # Copy database info
            cp /app/build-output/database-info.json /output/ && \
            echo 'Database info copied successfully' && \
            
            cd android && chmod +x gradlew 2>/dev/null || true && \
            
            # Build debug APK
            ./gradlew assembleDebug && \
            cp app/build/outputs/apk/debug/app-debug.apk /output/ && \
            echo 'Debug APK built successfully' && \
            
            # Build release APK
            ./gradlew assembleRelease && \
            cp app/build/outputs/apk/release/app-release-unsigned.apk /output/ && \
            echo 'Release APK built successfully' && \
            
            # Build release AAB
            ./gradlew bundleRelease && \
            cp app/build/outputs/bundle/release/app-release.aab /output/ && \
            echo 'Release AAB built successfully'
          "
        
    - name: Sign release APK
      if: env.KEYSTORE_BASE64 != ''
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: |
        # Decode keystore
        echo $KEYSTORE_BASE64 | base64 -d > release-key.keystore
        
        # Sign APK
        jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
          -keystore release-key.keystore \
          -storepass $KEYSTORE_PASSWORD \
          -keypass $KEY_PASSWORD \
          build-output/app-release-unsigned.apk \
          $KEY_ALIAS
          
        # Align APK
        zipalign -v 4 build-output/app-release-unsigned.apk \
          build-output/app-release-signed.apk
        
    - name: Upload web build
      uses: actions/upload-artifact@v4
      with:
        name: vegetipple-web-build
        path: build-output/www/
        retention-days: 30
        
    - name: Deploy to GitHub Pages
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/deploy-pages@v4
      with:
        artifact_name: vegetipple-web-build
        
    - name: Upload database info
      uses: actions/upload-artifact@v4
      with:
        name: vegetipple-database-info
        path: build-output/database-info.json
        retention-days: 30
        
    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: vegetipple-debug-apk
        path: build-output/app-debug.apk
        retention-days: 30
        
    - name: Upload release APK (unsigned)
      uses: actions/upload-artifact@v4
      with:
        name: vegetipple-release-apk-unsigned
        path: build-output/app-release-unsigned.apk
        retention-days: 30
        
    - name: Upload release APK (signed)
      if: env.KEYSTORE_BASE64 != ''
      uses: actions/upload-artifact@v4
      with:
        name: vegetipple-release-apk-signed
        path: build-output/app-release-signed.apk
        retention-days: 30
        
    - name: Upload release AAB
      uses: actions/upload-artifact@v4
      with:
        name: vegetipple-release-aab
        path: build-output/app-release.aab
        retention-days: 30
        
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Vegetipple Mobile ${{ github.ref_name }}
        draft: false
        prerelease: false
        body: |
          ## Vegetipple Mobile ${{ github.ref_name }}
          
          ### ðŸ“± Android App Release
          
          **Download Options:**
          - **Debug APK**: For testing and development
          - **Release APK**: Production-ready (unsigned)
          - **Release AAB**: For Google Play Store deployment
          
          ### ðŸš€ What's New
          - Vegan drink database with search functionality
          - Real-time suggestions and filtering
          - Company information and external links
          - Native Android performance
          
          ### ðŸ“‹ Installation
          1. Download the appropriate APK file
          2. Enable "Install from unknown sources" on your Android device
          3. Install the APK file
          
          ### ðŸ”§ For Developers
          - Built with Ionic + Capacitor
          - SQLite database integration
          - Ready for Google Play Store submission (use AAB file)
          
    - name: Upload debug APK to release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build-output/app-debug.apk
        asset_name: vegetipple-${{ github.ref_name }}-debug.apk
        asset_content_type: application/vnd.android.package-archive
        
    - name: Upload release APK to release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build-output/app-release-unsigned.apk
        asset_name: vegetipple-${{ github.ref_name }}-release.apk
        asset_content_type: application/vnd.android.package-archive
        
    - name: Upload signed APK to release
      if: startsWith(github.ref, 'refs/tags/') && env.KEYSTORE_BASE64 != ''
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build-output/app-release-signed.apk
        asset_name: vegetipple-${{ github.ref_name }}-release-signed.apk
        asset_content_type: application/vnd.android.package-archive
        
    - name: Upload AAB to release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build-output/app-release.aab
        asset_name: vegetipple-${{ github.ref_name }}-release.aab
        asset_content_type: application/octet-stream